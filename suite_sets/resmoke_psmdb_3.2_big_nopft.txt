aggregation,mmapv1,wiredTiger,rocksdb
aggregation_auth,default
audit,mmapv1,wiredTiger,rocksdb
auth,mmapv1,wiredTiger,rocksdb
auth_audit,mmapv1,wiredTiger,rocksdb
backup,wiredTiger,rocksdb
bulk_gle_passthrough,mmapv1,wiredTiger,rocksdb
concurrency,mmapv1,wiredTiger,rocksdb
concurrency_replication,mmapv1,wiredTiger,rocksdb
concurrency_sharded,mmapv1,wiredTiger,rocksdb
concurrency_sharded_sccc,mmapv1,wiredTiger,rocksdb
!concurrency_simultaneous --executor=concurrency jstests/concurrency/fsm_all_simultaneous.js,mmapv1,wiredTiger,rocksdb
core,mmapv1,PerconaFT,wiredTiger,rocksdb
core_auth,default
core --shellReadMode=legacy --shellWriteMode=compatibility,mmapv1,PerconaFT,wiredTiger,rocksdb
core_small_oplog,mmapv1,PerconaFT,wiredTiger,rocksdb
core_small_oplog_rs,mmapv1,PerconaFT,wiredTiger,rocksdb
dbtest,mmapv1,wiredTiger,rocksdb
disk,default
dur_jscore_passthrough,default
durability,default
failpoints,default
failpoints_auth,default
gle_auth --shellWriteMode=legacy --shellReadMode=legacy,mmapv1,wiredTiger,rocksdb
gle_auth --shellWriteMode=commands,mmapv1,wiredTiger,rocksdb
gle_auth_basics_passthrough --shellWriteMode=legacy --shellReadMode=legacy,mmapv1,wiredTiger,rocksdb
gle_auth_basics_passthrough --shellWriteMode=commands,mmapv1,wiredTiger,rocksdb
jstestfuzz,mmapv1,wiredTiger,rocksdb
jstestfuzz_replication,wiredTiger,rocksdb
jstestfuzz_sharded,wiredTiger,rocksdb
knobs,mmapv1,wiredTiger,rocksdb
mmap,mmapv1
mongos_test,default
multiversion,default
  $ rm -rf ${DBPATH}/install ${DBPATH}/multiversion
  $ python buildscripts/setup_multiversion_mongodb.py ${DBPATH}/install ${DBPATH}/multiversion "base" "Linux/x86_64" "2.4" "2.6" "3.0" "3.2.1"
  $ [[ ${PATH} == *"/data/multiversion"* ]] || export PATH=${PATH}:/data/multiversion
no_passthrough,mmapv1,wiredTiger,rocksdb
no_passthrough_with_mongod,mmapv1,wiredTiger,rocksdb
parallel,mmapv1,wiredTiger,rocksdb
parallel --shellReadMode=legacy --shellWriteMode=compatibility,mmapv1,wiredTiger,rocksdb
ratelimit,mmapv1,wiredTiger,rocksdb
replica_sets,mmapv1,wiredTiger,rocksdb
replica_sets_auth,default
replication,mmapv1,wiredTiger,rocksdb
replication_auth,default
sharding,mmapv1,wiredTiger,rocksdb
sharding_auth,default
sharding_gle_auth_basics_passthrough --shellWriteMode=legacy --shellReadMode=legacy,mmapv1,wiredTiger,rocksdb
sharding_gle_auth_basics_passthrough --shellWriteMode=commands,mmapv1,wiredTiger,rocksdb
sharding_jscore_passthrough,mmapv1,wiredTiger,rocksdb
sharding_legacy_multiversion,default
  $ rm -rf ${DBPATH}/install ${DBPATH}/multiversion
  $ python buildscripts/setup_multiversion_mongodb.py ${DBPATH}/install ${DBPATH}/multiversion "base" "Linux/x86_64" "2.4" "2.6" "3.0" "3.2.1"
  $ [[ ${PATH} == *"/data/multiversion"* ]] || export PATH=${PATH}:/data/multiversion
slow1,mmapv1,wiredTiger,rocksdb
slow2,mmapv1,wiredTiger,rocksdb
ssl,default
ssl_special,default
tool,mmapv1,wiredTiger,rocksdb
unittests,default
