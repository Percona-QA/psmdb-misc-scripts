replica_sets_multiversion|inMemory
  $ rm -rf ${DBPATH}/install ${DBPATH}/multiversion
  $ python buildscripts/setup_multiversion_mongodb.py --installDir ${DBPATH}/install --linkDir ${DBPATH}/multiversion --edition base --platform ubuntu1804 --architecture x86_64 3.2 3.4 3.6 4.0 4.0.1 4.0.5 4.2 4.2.1 4.4 4.9
  $ [[ ${PATH} == *"/data/multiversion"* ]] || export PATH=${PATH}:/data/multiversion
  $ export PYTHONPATH="$(pwd):$(pwd)/src"
  $ python  buildscripts/evergreen_gen_multiversion_tests.py generate-exclude-tags --output=multiversion_exclude_tags.yml
replica_sets_reconfig_jscore_passthrough|inMemory
replica_sets_reconfig_jscore_stepdown_passthrough|inMemory
replica_sets_reconfig_kill_primary_jscore_passthrough|inMemory
 replica_sets_tde_cbc|inMemory
 replica_sets_tde_gcm|inMemory
replica_sets_terminate_primary_jscore_passthrough|inMemory
replica_sets_update_v1_oplog|inMemory
replica_sets_update_v1_oplog_jscore_passthrough|inMemory
resharding_fuzzer|inMemory
resharding_fuzzer_idempotency|inMemory
resmoke_end2end_tests|inMemory
retryable_writes_jscore_passthrough|inMemory
retryable_writes_jscore_stepdown_passthrough|inMemory
rollback_fuzzer|inMemory
rollback_fuzzer_clean_shutdowns|inMemory
rollback_fuzzer_unclean_shutdowns|inMemory
rollback_multiversion_fuzzer|inMemory
sasl|inMemory
sdam_json_test|inMemory
search|inMemory
search_auth|inMemory
search_ssl|inMemory
secondary_reads_passthrough|inMemory
serial_run|inMemory
server_selection_json_test|inMemory
session_jscore_passthrough|inMemory
sharded_causally_consistent_jscore_passthrough|inMemory
sharded_causally_consistent_jscore_txns_passthrough|inMemory
sharded_causally_consistent_read_concern_snapshot_passthrough|inMemory
sharded_collections_causally_consistent_jscore_txns_passthrough|inMemory
sharded_collections_jscore_passthrough|inMemory
sharded_jscore_op_query_txns|inMemory
sharded_jscore_txns|inMemory
sharded_jscore_txns_sharded_collections|inMemory
sharded_multi_stmt_txn_jscore_passthrough|inMemory
sharding|inMemory
sharding --shellReadMode=legacy --excludeWithAnyTags=requires_find_command|inMemory
sharding_api_version_jscore_passthrough|inMemory
sharding_auth|inMemory
sharding_auth_audit|inMemory
sharding_continuous_config_stepdown|inMemory
sharding_gle_auth_basics_passthrough --shellWriteMode=legacy --shellReadMode=legacy --excludeWithAnyTags=requires_find_command|inMemory
sharding_gle_auth_basics_passthrough --shellWriteMode=commands|inMemory
sharding_jscore_op_query_passthrough|inMemory
sharding_jscore_passthrough|inMemory
sharding_jscore_passthrough --shellWriteMode=compatibility --shellReadMode=legacy --excludeWithAnyTags=requires_find_command|inMemory
sharding_last_lts_mongos_and_mixed_shards|inMemory
sharding_max_mirroring|inMemory
sharding_multiversion|inMemory
  $ rm -rf ${DBPATH}/install ${DBPATH}/multiversion
  $ python buildscripts/setup_multiversion_mongodb.py --installDir ${DBPATH}/install --linkDir ${DBPATH}/multiversion --edition base --platform ubuntu1804 --architecture x86_64 3.2 3.4 3.6 4.0 4.0.1 4.0.5 4.2 4.2.1 4.4 4.9
  $ [[ ${PATH} == *"/data/multiversion"* ]] || export PATH=${PATH}:/data/multiversion
  $ export PYTHONPATH="$(pwd):$(pwd)/src"
  $ python  buildscripts/evergreen_gen_multiversion_tests.py generate-exclude-tags --output=multiversion_exclude_tags.yml
 sharding_tde_cbc|inMemory
 sharding_tde_gcm|inMemory
sharding_update_v1_oplog|inMemory
sharding_update_v1_oplog_jscore_passthrough|inMemory
slow1 --jobs=1|inMemory
snmp|inMemory
ssl|inMemory
ssl_special|inMemory
ssl_x509|inMemory
 tde_cbc|inMemory
 tde_gcm|inMemory
tenant_migration_causally_consistent_jscore_passthrough|inMemory
tenant_migration_jscore_passthrough|inMemory
tenant_migration_kill_primary_jscore_passthrough|inMemory
tenant_migration_multi_stmt_txn_jscore_passthrough|inMemory
tenant_migration_stepdown_jscore_passthrough|inMemory
tenant_migration_terminate_primary_jscore_passthrough|inMemory
tla_plus|inMemory
 unittests|inMemory
unittests_auth|inMemory
unittests_client|inMemory
unittest_shell_hang_analyzer|inMemory
unittests_query|inMemory
unittests_repl|inMemory
unittests_sharding|inMemory
watchdog --jobs=1|inMemory
  $ jstests/watchdog/charybdefs_setup.sh
 with_external_server|inMemory
with_server|inMemory
write_concern_majority_passthrough|inMemory
