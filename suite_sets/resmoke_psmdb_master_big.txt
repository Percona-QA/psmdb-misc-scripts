aggregation|mmapv1|wiredTiger|inMemory|rocksdb
aggregation_auth|default
aggregation_facet_unwind_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
aggregation_read_concern_majority_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
aggregation_sharded_collections_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
audit|mmapv1|wiredTiger|inMemory|rocksdb
auth|mmapv1|wiredTiger|rocksdb
auth --excludeWithAnyTags=requires_persistence,requires_journaling|inMemory
auth_audit|mmapv1|wiredTiger|rocksdb
auth_audit --excludeWithAnyTags=requires_persistence,requires_journaling|inMemory
backup|wiredTiger|rocksdb
bulk_gle_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
causally_consistent_jscore_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
causally_consistent_jscore_passthrough_auth|mmapv1|wiredTiger|inMemory|rocksdb
change_streams|mmapv1|wiredTiger|inMemory|rocksdb
change_streams_mongos_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
concurrency|mmapv1|wiredTiger|inMemory|rocksdb
concurrency_replication|mmapv1|wiredTiger|inMemory|rocksdb
concurrency_sharded|mmapv1|wiredTiger|inMemory|rocksdb
concurrency_sharded_causal_consistency|mmapv1|wiredTiger|inMemory|rocksdb
concurrency_sharded_causal_consistency_and_balancer|mmapv1|wiredTiger|inMemory|rocksdb
concurrency_sharded_with_stepdowns|mmapv1|wiredTiger|inMemory|rocksdb
concurrency_sharded_with_stepdowns_and_balancer|mmapv1|wiredTiger|inMemory|rocksdb
!concurrency_simultaneous --executor=concurrency jstests/concurrency/fsm_all_simultaneous.js|mmapv1|wiredTiger|inMemory|rocksdb
core|mmapv1|wiredTiger|inMemory|rocksdb
core_auth|default
core --shellReadMode=legacy --shellWriteMode=compatibility --excludeWithAnyTags=requires_find_command|mmapv1|wiredTiger|inMemory|rocksdb
core_minimum_batch_size|mmapv1|wiredTiger|inMemory|rocksdb
core_op_query|mmapv1|wiredTiger|inMemory|rocksdb
dbtest|mmapv1|wiredTiger|inMemory|rocksdb
decimal|mmapv1|wiredTiger|inMemory|rocksdb
disk_mmapv1|default
disk_wiredtiger --excludeWithAnyTags=requires_mmapv1|default
dur_jscore_passthrough|default
durability|default
external_auth|default
failpoints|default
failpoints_auth|default
gle_auth --shellWriteMode=legacy --shellReadMode=legacy --excludeWithAnyTags=requires_find_command|mmapv1|wiredTiger|inMemory|rocksdb
gle_auth --shellWriteMode=commands|mmapv1|wiredTiger|inMemory|rocksdb
gle_auth_basics_passthrough --shellWriteMode=legacy --shellReadMode=legacy --excludeWithAnyTags=requires_find_command|mmapv1|wiredTiger|inMemory|rocksdb
gle_auth_basics_passthrough --shellWriteMode=commands|mmapv1|wiredTiger|inMemory|rocksdb
integration_tests_replset|default
integration_tests_sharded|default
integration_tests_standalone|default
 jstestfuzz|mmapv1|wiredTiger|inMemory|rocksdb
 jstestfuzz_replication|wiredTiger|inMemory|rocksdb
 jstestfuzz_sharded|wiredTiger|inMemory|rocksdb
json_schema|mmapv1|wiredTiger|inMemory|rocksdb
knobs|mmapv1|wiredTiger|inMemory|rocksdb
master_slave|mmapv1|wiredTiger|rocksdb
master_slave --excludeWithAnyTags=requires_persistence,requires_journaling|inMemory
master_slave_auth|default
master_slave_jscore_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
mmap|mmapv1
mongo_rocks|default
mongos_test|default
multiversion --excludeWithAnyTags=requires_wiredtiger|mmapv1
  $ rm -rf ${DBPATH}/install ${DBPATH}/multiversion
  $ python buildscripts/setup_multiversion_mongodb.py ${DBPATH}/install ${DBPATH}/multiversion "base" "Linux/x86_64" "3.0" "3.2" "3.4"
  $ [[ ${PATH} == *"/data/multiversion"* ]] || export PATH=${PATH}:/data/multiversion
multiversion --excludeWithAnyTags=requires_mmapv1|wiredTiger|inMemory|rocksdb
  $ rm -rf ${DBPATH}/install ${DBPATH}/multiversion
  $ python buildscripts/setup_multiversion_mongodb.py ${DBPATH}/install ${DBPATH}/multiversion "base" "Linux/x86_64" "3.0" "3.2" "3.4"
  $ [[ ${PATH} == *"/data/multiversion"* ]] || export PATH=${PATH}:/data/multiversion
multiversion_auth --excludeWithAnyTags=requires_wiredtiger|mmapv1
  $ rm -rf ${DBPATH}/install ${DBPATH}/multiversion
  $ python buildscripts/setup_multiversion_mongodb.py ${DBPATH}/install ${DBPATH}/multiversion "base" "Linux/x86_64" "3.0" "3.2" "3.4"
  $ [[ ${PATH} == *"/data/multiversion"* ]] || export PATH=${PATH}:/data/multiversion
multiversion_multistorage_engine|mmapv1|wiredTiger|inMemory|rocksdb
  $ rm -rf ${DBPATH}/install ${DBPATH}/multiversion
  $ python buildscripts/setup_multiversion_mongodb.py ${DBPATH}/install ${DBPATH}/multiversion "base" "Linux/x86_64" "3.0" "3.2" "3.4"
  $ [[ ${PATH} == *"/data/multiversion"* ]] || export PATH=${PATH}:/data/multiversion
no_passthrough|mmapv1|wiredTiger|rocksdb
no_passthrough --excludeWithAnyTags=requires_persistence,requires_journaling|inMemory
no_passthrough_with_mongod|mmapv1|wiredTiger|rocksdb
no_passthrough_with_mongod --excludeWithAnyTags=requires_persistence,requires_journaling|inMemory
parallel|mmapv1|wiredTiger|inMemory|rocksdb
parallel --shellReadMode=legacy --shellWriteMode=compatibility --excludeWithAnyTags=requires_find_command|mmapv1|wiredTiger|inMemory|rocksdb
percona_no_passthrough_with_mongod|mmapv1|wiredTiger|inMemory|rocksdb
ratelimit|mmapv1|wiredTiger|inMemory|rocksdb
read_concern_majority_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
read_concern_linearizable_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
read_only|mmapv1|wiredTiger|rocksdb
read_only_sharded|mmapv1|wiredTiger|rocksdb
redaction|default
replica_sets|mmapv1|wiredTiger|inMemory|rocksdb
replica_sets_auth|default
replica_sets_compression|default
replica_sets_initsync_jscore_passthrough|mmapv1|wiredTiger|rocksdb
replica_sets_initsync_static_jscore_passthrough|mmapv1|wiredTiger|rocksdb
replica_sets_jscore_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
replica_sets_kill_secondaries_jscore_passthrough|mmapv1|wiredTiger|rocksdb
replica_sets_pv0|default
replica_sets_resync_jscore_passthrough|mmapv1|wiredTiger|rocksdb
replica_sets_resync_static_jscore_passthrough|mmapv1|wiredTiger|rocksdb
retryable_writes_jscore_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
serial_run|mmapv1|wiredTiger|inMemory|rocksdb
session_jscore_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
sharded_causally_consistent_jscore_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
sharded_collections_jscore_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
sharding|mmapv1|wiredTiger|rocksdb
sharding --excludeWithAnyTags=requires_persistence,requires_journaling|inMemory
sharding --shellReadMode=legacy --excludeWithAnyTags=requires_find_command|mmapv1|wiredTiger|rocksdb
sharding --shellReadMode=legacy --excludeWithAnyTags=requires_persistence,requires_journaling,requires_find_command|inMemory
sharding_auth|default
sharding_auth_audit|mmapv1|wiredTiger|rocksdb
sharding_auth_audit --excludeWithAnyTags=requires_persistence,requires_journaling|inMemory
sharding_compression|default
sharding_continuous_config_stepdown|mmapv1|wiredTiger|rocksdb
sharding_continuous_config_stepdown --excludeWithAnyTags=requires_persistence,requires_journaling|inMemory
sharding_gle_auth_basics_passthrough --shellWriteMode=legacy --shellReadMode=legacy --excludeWithAnyTags=requires_find_command|mmapv1|wiredTiger|inMemory|rocksdb
sharding_gle_auth_basics_passthrough --shellWriteMode=commands|mmapv1|wiredTiger|inMemory|rocksdb
sharding_jscore_passthrough|mmapv1|wiredTiger|inMemory|rocksdb
sharding_jscore_passthrough --shellWriteMode=compatibility --shellReadMode=legacy --excludeWithAnyTags=requires_find_command|mmapv1|wiredTiger|inMemory|rocksdb
sharding_last_stable_mongos_and_mixed_shards|default
  $ rm -rf ${DBPATH}/install ${DBPATH}/multiversion
  $ python buildscripts/setup_multiversion_mongodb.py ${DBPATH}/install ${DBPATH}/multiversion "base" "Linux/x86_64" "3.0" "3.2" "3.4"
  $ [[ ${PATH} == *"/data/multiversion"* ]] || export PATH=${PATH}:/data/multiversion
slow1|mmapv1|wiredTiger|inMemory|rocksdb
ssl|default
ssl_special|default
tool|mmapv1|wiredTiger|inMemory|rocksdb
unittests|default
watchdog|mmapv1|wiredTiger|inMemory|rocksdb
